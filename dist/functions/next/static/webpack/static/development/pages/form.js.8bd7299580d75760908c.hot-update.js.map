{"version":3,"file":"static/webpack/static/development/pages/form.js.8bd7299580d75760908c.hot-update.js","sources":["webpack:///./pages/form/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\nimport * as routes from \"./../../../reusecore/src/constants/routes\";\nimport { AppWrapper } from \"../../containers/App/app.style\";\nimport { AppWithAuthentication } from \"./../../containers/App\";\nimport * as typeformEmbed from \"@typeform/embed\";\nimport axios from 'axios';\n\n\n// const form_id = 'A7bW0z';\n// const token = 'DLrXyVaPwwS7VhFoL84VwKvcqc5rP8x9fEARcVJRt5Sg';\n\nclass Form extends Component {\n  componentDidMount() {\n    typeformEmbed.makeWidget(\n      embedElement,\n      \"https://dhakon.typeform.com/to/A7bW0z\",\n      {\n        hideHeaders: true,\n        hideFooter: true,\n        opacity: 75,\n        onSubmit: function () {\n          Router.push(routes.LANDING);\n\n          // axios.get(`/forms/A7bW0z/responses`, {\n          //   headers: {\n          //     'Authorization': `Bearer DLrXyVaPwwS7VhFoL84VwKvcqc5rP8x9fEARcVJRt5Sg`\n          //   }\n          // })\n          //   .then(function (response) {\n          //     // handle success\n          //     // console.log('response success : ', response.data.items[0]);\n\n          //     // const res = response.data.items[0]\n\n          //   })\n          //   .catch(function (error) {\n          //     // handle error\n          //     console.log('response error : ', error);\n          //   })\n\n          axios.post('/message', {\n            body: 'Hello from Node',\n            to: '+6281286974581',\n            from: '+17609933055'\n          })\n            .then(function (response) {\n              console.log('response success', response);\n            })\n            .catch(function (error) {\n              console.log('response error', error);\n            });\n\n        }\n      }\n    );\n  }\n\n  handleSubmit = () => {\n    Router.push(routes.LANDING);\n  };\n\n  render() {\n    return (\n      <AppWithAuthentication>\n        <AppWrapper id=\"embedElement\" />\n      </AppWithAuthentication>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser\n});\n\nexport default connect(mapStateToProps)(Form);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;;;;;;AAhDA;AACA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAEA;AACA;AAEA;AApCA;AAuCA;;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAxDA;AACA;AA0DA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}